# Atlas Travel Platform - Development Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: atlas-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: atlas_development
      POSTGRES_USER: atlas_user
      POSTGRES_PASSWORD: atlas_dev_password_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - atlas-network

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: atlas-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - atlas-network

  # Atlas Application
  atlas-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: atlas-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atlas_user:atlas_dev_password_2024@postgres:5432/atlas_development
      - DIRECT_URL=postgresql://atlas_user:atlas_dev_password_2024@postgres:5432/atlas_development
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - atlas-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  atlas-network:
    driver: bridge