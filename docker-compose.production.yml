# Atlas Travel Platform - Production Docker Compose
version: '3.8'

services:
  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: atlas-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/ssl/certs:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - atlas-app-1
      - atlas-app-2
      - atlas-app-3
    networks:
      - atlas-network

  # PostgreSQL Primary Database
  postgres-primary:
    image: postgres:15-alpine
    container_name: atlas-postgres-primary
    restart: unless-stopped
    environment:
      POSTGRES_DB: atlas_production
      POSTGRES_USER: atlas_prod
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD_FILE: /run/secrets/replication_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data
      - ./docker/postgres-primary.conf:/etc/postgresql/postgresql.conf
      - ./docker/pg_hba.conf:/etc/postgresql/pg_hba.conf
    secrets:
      - postgres_password
      - replication_password
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - atlas-network

  # PostgreSQL Read Replica
  postgres-replica:
    image: postgres:15-alpine
    container_name: atlas-postgres-replica
    restart: unless-stopped
    environment:
      POSTGRES_DB: atlas_production
      POSTGRES_USER: atlas_prod
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      PGUSER: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    secrets:
      - postgres_password
      - replication_password
    depends_on:
      - postgres-primary
    networks:
      - atlas-network

  # Redis Cluster
  redis-master:
    image: redis:7-alpine
    container_name: atlas-redis-master
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    volumes:
      - redis_master_data:/data
      - ./docker/redis.conf:/etc/redis/redis.conf
    secrets:
      - redis_password
    command: redis-server /etc/redis/redis.conf
    networks:
      - atlas-network

  # Atlas Application Instance 1
  atlas-app-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: atlas-app-1
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - INSTANCE_ID=prod-1
      - PORT=3000
      - DATABASE_URL=postgresql://atlas_prod:${POSTGRES_PASSWORD}@postgres-primary:5432/atlas_production
      - ANALYTICS_DATABASE_URL=postgresql://atlas_prod:${POSTGRES_PASSWORD}@postgres-replica:5432/atlas_production
      - REDIS_URL=redis://redis-master:6379
      - JWT_SECRET_FILE=/run/secrets/jwt_secret
      - NEXT_PUBLIC_APP_URL=https://atlas-platform.com
    secrets:
      - jwt_secret
      - postgres_password
      - redis_password
    depends_on:
      - postgres-primary
      - redis-master
    volumes:
      - /var/log/atlas:/var/log/atlas
    networks:
      - atlas-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Atlas Application Instance 2
  atlas-app-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: atlas-app-2
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - INSTANCE_ID=prod-2
      - PORT=3000
      - DATABASE_URL=postgresql://atlas_prod:${POSTGRES_PASSWORD}@postgres-primary:5432/atlas_production
      - ANALYTICS_DATABASE_URL=postgresql://atlas_prod:${POSTGRES_PASSWORD}@postgres-replica:5432/atlas_production
      - REDIS_URL=redis://redis-master:6379
      - JWT_SECRET_FILE=/run/secrets/jwt_secret
      - NEXT_PUBLIC_APP_URL=https://atlas-platform.com
    secrets:
      - jwt_secret
      - postgres_password
      - redis_password
    depends_on:
      - postgres-primary
      - redis-master
    volumes:
      - /var/log/atlas:/var/log/atlas
    networks:
      - atlas-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Atlas Application Instance 3
  atlas-app-3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: atlas-app-3
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - INSTANCE_ID=prod-3
      - PORT=3000
      - DATABASE_URL=postgresql://atlas_prod:${POSTGRES_PASSWORD}@postgres-primary:5432/atlas_production
      - ANALYTICS_DATABASE_URL=postgresql://atlas_prod:${POSTGRES_PASSWORD}@postgres-replica:5432/atlas_production
      - REDIS_URL=redis://redis-master:6379
      - JWT_SECRET_FILE=/run/secrets/jwt_secret
      - NEXT_PUBLIC_APP_URL=https://atlas-platform.com
    secrets:
      - jwt_secret
      - postgres_password
      - redis_password
    depends_on:
      - postgres-primary
      - redis-master
    volumes:
      - /var/log/atlas:/var/log/atlas
    networks:
      - atlas-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: atlas-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - atlas-network

  grafana:
    image: grafana/grafana:latest
    container_name: atlas-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
    secrets:
      - grafana_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    networks:
      - atlas-network

secrets:
  jwt_secret:
    external: true
  postgres_password:
    external: true
  replication_password:
    external: true
  redis_password:
    external: true
  grafana_password:
    external: true

volumes:
  postgres_primary_data:
    driver: local
  postgres_replica_data:
    driver: local
  redis_master_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  atlas-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16